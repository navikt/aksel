import PT from 'prop-types';
/* eslint-disable react/prefer-stateless-function  */
import React, { Component } from 'react';
import { guid } from 'nav-frontend-js-utils';
import 'nav-frontend-skjema-style'; // eslint-disable-line import/extensions
import classNames from 'classnames';

const cls = (className, harFeil) => classNames('skjemaelement skjemaelement--horisontal', className, {
    'skjemaelement--harFeil': harFeil
});

/**
 * Checkbox
 */
class Checkbox extends Component {

    render() {
        const { className, label, id, feil, checkboxRef, ...other } = this.props;
        const inputId = id || guid();
        return (
            <div className={cls(className, !!feil)}>
                <input
                    type="checkbox"
                    className="skjemaelement__input checkboks"
                    id={inputId}
                    ref={checkboxRef}
                    {...other}
                />
                <label className="skjemaelement__label" htmlFor={inputId}>{label}</label>
                <div role="alert" aria-live="assertive" className="skjemaelement__feilmelding">
                    {feil ? feil.feilmelding : null}
                </div>
            </div>
        );
    }
}

Checkbox.propTypes = {
    /**
     * ClassName
     */
    className: PT.string,
    /**
     * Label for checkbox
     */
    label: PT.node.isRequired,
    /**
     * Id for checkbox, hvis id ikke er satt brukes en tilfeldig guid
     */
    id: PT.string,
    /**
     * Hvis skjemaet har feil sender man inn et objekt med en feilmelding
     */
    feil: PT.shape({
        feilmelding: PT.string.isRequired
    }),
    /**
     * Referanse til selve checkboxen. Brukes for eksempel til Ã¥ sette fokus
     */
    checkboxRef: PT.func
};

Checkbox.defaultProps = {
    className: undefined,
    id: undefined,
    feil: undefined,
    checkboxRef: undefined
};

export default Checkbox;
