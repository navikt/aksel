import React, { Component } from 'react';
import classNames from 'classnames';
import PT from 'prop-types';
import { Undertittel, Normaltekst } from 'nav-frontend-typografi';
import { HoyreChevron } from 'nav-frontend-chevron';
import Ikon from 'nav-frontend-ikoner-assets'; // eslint-disable-line import/extensions
import 'nav-frontend-inngang-style'; // eslint-disable-line import/extensions
import 'nav-frontend-lenker-style'; // eslint-disable-line import/extensions

const cls = (className, props) => classNames('inngang inngang__normalvertikalinngang', className, {
    'inngang__normalvertikalinngang--medikon': props.ikon,
    'inngang__normalvertikalinngang--medlink': props.lesMerHref !== false && !props.ikon
});

class NormalVertikalInngang extends Component { // eslint-disable-line react/prefer-stateless-function

    static renderHoyreChevron(stor) {
        const chevronProps = stor === true ? { stor: true } : {};

        return (
            <div className="ikonWrapper">
                <HoyreChevron {... chevronProps} />
            </div>
        );
    }

    renderTekstInnhold(tittel, tekst) { // eslint-disable-line class-methods-use-this
        return (
            <div className="tekstWrapper">
                <Undertittel>{ tittel }</Undertittel>
                <Normaltekst>{ tekst }</Normaltekst>
            </div>
        );
    }

    renderIkon(ikon) { // eslint-disable-line class-methods-use-this
        return (
            <div className="ikonWrapper">
                <Ikon kind={ikon} size={46} />
            </div>
        );
    }

    renderNormalVertikalInngangMedIkon(ikon, tittel, tekst) {
        return (
            <div>
                { this.renderIkon(ikon) }
                { this.renderTekstInnhold(tittel, tekst) }
                { NormalVertikalInngang.renderHoyreChevron(true) }
            </div>
        );
    }

    renderNormalVertikalInngangMedLink(tittel, tekst, link) {
        return (
            <div>
                { this.renderTekstInnhold(tittel, tekst) }

                <div className="lenkeWrapper">
                    <a className="lenke" href={link}>
                        Les mer
                    </a>
                    <HoyreChevron
                        className="chevronAsideLink"
                        onClick={() => { window.location = link; }}
                    />
                </div>
            </div>
        );
    }

    renderNormalVertikalInngangDefault(tittel, tekst) {
        return (
            <div>
                { NormalVertikalInngang.renderHoyreChevron() }
                { this.renderTekstInnhold(tittel, tekst) }
            </div>
        );
    }

    render() {
        const { className, tittel, tekst, ikon, lesMerHref, ...props } = this.props;
        let renderedContent = null;


        if (ikon) {
            renderedContent = this.renderNormalVertikalInngangMedIkon(ikon, tittel, tekst);
        } else if (lesMerHref) {
            renderedContent = this.renderNormalVertikalInngangMedLink(tittel, tekst, lesMerHref);
        } else {
            renderedContent = this.renderNormalVertikalInngangDefault(tittel, tekst);
        }


        return (
            <a {... props} className={cls(className, this.props)}>
                { renderedContent }
            </a>
        );
    }
}

NormalVertikalInngang.defaultProps = {
    ikon: null,
    lesMerHref: undefined,
    className: undefined
};

NormalVertikalInngang.propTypes = {
    tittel: PT.string.isRequired,
    tekst: PT.string.isRequired,
    ikon: PT.string,
    lesMerHref: PT.string,
    className: PT.string
};

export default NormalVertikalInngang;
