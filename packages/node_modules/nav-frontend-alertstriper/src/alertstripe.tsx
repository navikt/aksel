import * as PT from 'prop-types';
import * as React from 'react';
import * as classNames from 'classnames';
import { Normaltekst } from 'nav-frontend-typografi';
import Ikon from 'nav-frontend-ikoner-assets';
import 'nav-frontend-alertstriper-style';

const cls = (type, solid, className) => classNames('alertstripe', className, {
    'alertstripe--solid': solid,
    'alertstripe--advarsel': type === 'advarsel' || type === 'nav-ansatt',
    'alertstripe--info': type === 'info',
    'alertstripe--suksess': type === 'suksess'
});
const ikonKind = (type, solid) => {
    const kindMap = {
        'ok-sirkel-fylt': type === 'suksess' && solid,
        'ok-sirkel': type === 'suksess' && !solid,
        'feil-sirkel-fylt': type === 'advarsel' && !solid,
        'advarsel-trekant-fylt': type === 'advarsel' && solid,
        'info-sirkel-fylt': type === 'info' && solid,
        'info-sirkel-orange': type === 'info' && !solid,
        'nav-ansatt': type === 'nav-ansatt'
    };

    return Object.keys(kindMap)
        .map((key) => ({ key, predicate: kindMap[key] }))
        .find(({ predicate }) => predicate)!.key;
};

export interface AlertStripeProps {
    children: React.ReactNode | React.ReactChild | React.ReactChildren;
    solid?: boolean;
    size?: string | number;
    className?: string;
}

export interface AlertStripeBaseProps extends  AlertStripeProps {
    type: 'suksess' | 'info' | 'advarsel' | 'nav-ansatt';
}

class AlertStripe extends React.Component<AlertStripeBaseProps> {
    render() {
        const { type, solid, size, className, children, ...props } = this.props;
        const ariaAttrs = type === 'advarsel' ? { 'aria-live': 'assertive' } : {};

        return (
            <div className={cls(type, solid, className)} {...props} {...ariaAttrs}>
                <span className="alertstripe__ikon" aria-label={type}>
                    <Ikon kind={ikonKind(type, solid)} size={size} />
                </span>
                <Normaltekst className="alertstripe__tekst" tag="span">{children}</Normaltekst>
            </div>
        );
    }
}

(AlertStripe as React.ComponentClass).propTypes = {
    children: PT.node.isRequired,
    type: PT.oneOf(['suksess', 'info', 'advarsel', 'nav-ansatt']).isRequired,
    solid: PT.bool,
    size: PT.oneOfType([PT.string, PT.number]),
    className: PT.string
};

(AlertStripe as React.ComponentClass).defaultProps = {
    className: undefined,
    size: '1.5em',
    solid: false
};

export default AlertStripe;

export { default as AlertStripeAdvarselSolid } from './advarsel-solid-alertstripe';
export { default as AlertStripeAdvarsel } from './advarsel-alertstripe';
export { default as AlertStripeSuksessSolid } from './suksess-solid-alertstripe';
export { default as AlertStripeSuksess } from './suksess-alertstripe';
export { default as AlertStripeInfoSolid } from './info-solid-alertstripe';
export { default as AlertStripeInfo } from './info-alertstripe';
export { default as AlertStripeNavAnsatt } from './navansatt-alertstripe';
