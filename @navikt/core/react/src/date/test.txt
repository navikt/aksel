const ONE = () => (
  <DayPicker
    captionLayout={dropdownCaption ? "dropdown" : "label"}
    hideNavigation
    locale={_locale}
    mode={mode}
    onSelect={handleSelect}
    selected={selected ?? selectedDates}
    classNames={{
      vhidden: "navds-sr-only",
    }}
    components={{
      MonthCaption: () => <></>,
      DayButton: (props) => <DayButton {...props} locale={_locale} />,
      Month: Months,
    }}
    className={cl("navds-date", className)}
    disabled={(day) => {
      return (
        (disableWeekends && isWeekend(day)) || dateMatchModifiers(day, disabled)
      );
    }}
    weekStartsOn={1}
    modifiers={{
      weekend: (day) => disableWeekends && isWeekend(day),
    }}
    modifiersClassNames={{
      weekend: "rdp-day__weekend",
    }}
    // eslint-disable-next-line jsx-a11y/no-autofocus
    autoFocus={false}
    showWeekNumber={showWeekNumber}
    onWeekNumberClick={mode === "multiple" ? onWeekNumberClick : undefined}
    fixedWeeks
    showOutsideDays
    startMonth={fromDate}
    endMonth={toDate}
    month={clampMonth({ month, start: fromDate, end: toDate })}
    {...omit(rest, ["onSelect", "role"])}
  />
);

const TWO = () => (
  <DayPicker
    captionLayout={dropdownCaption ? "dropdown" : "label"}
    hideNavigation
    locale={_locale}
    mode={mode}
    onSelect={handleSelect}
    selected={selected ?? selectedDates}
    classNames={{
      vhidden: "navds-sr-only",
    }}
    components={{
      MonthCaption: () => <></>,
      DayButton: (props) => <DayButton {...props} locale={_locale} />,
      Month: Months,
    }}
    className="navds-date"
    disabled={(day) => {
      return (
        (disableWeekends && isWeekend(day)) || dateMatchModifiers(day, disabled)
      );
    }}
    weekStartsOn={1}
    modifiers={{
      weekend: (day) => disableWeekends && isWeekend(day),
    }}
    modifiersClassNames={{
      weekend: "rdp-day__weekend",
    }}
    // eslint-disable-next-line jsx-a11y/no-autofocus
    autoFocus={false}
    showWeekNumber={showWeekNumber}
    onWeekNumberClick={mode === "multiple" ? onWeekNumberClick : undefined}
    fixedWeeks={fixedWeeks}
    showOutsideDays
    startMonth={fromDate}
    endMonth={toDate}
    month={clampMonth({ month, start: fromDate, end: toDate })}
    {...omit(rest, ["children", "id", "role"])}
  />
);
