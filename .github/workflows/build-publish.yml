# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Build, test and maybe publish

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Gulp-build
        run: yarn boot
      - name: Eslint and Stylelint
        run: yarn lint
      - name: Test gatsby-build
        run: yarn build:gatsby

  chromatic:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required to retrieve git history
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Gulp-build
        run: yarn boot
      - uses: chromaui/action@v1
        with:
          token: ${{ secrets.GIT_REPO }}
          projectToken: ${{ secrets.CHROMATIC }}
          exitZeroOnChanges: false

  publish-npm:
    needs: chromatic
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          token: ${{secrets.GIT_REPO}}
      - uses: actions/setup-node@v1
        with:
          registry-url: http://registry.npmjs.org
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Gulp-build
        run: yarn boot
      - run: git config --global user.email "ken.aleksander.johansen@nav.no"
      - run: git config --global user.name "navikt"
      - run: git remote set-url origin https://KenAJoh:$NAV_DS_TOKEN@github.com/$GITHUB_REPOSITORY.git
        env:
          NAV_DS_TOKEN: ${{secrets.GIT_REPO}}
      - run: yarn lerna version patch --include-merged-tags --no-private --no-push --yes
      - run: yarn fix:versions
      - run: git commit -a -m "Lerna versionbump [ci skip]"
      - run: git push && git push --tags
      - run: yarn lerna publish from-package --yes
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_AUTOMATION}}

  publish-pages:
    needs: publish-npm
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          token: ${{secrets.GIT_REPO}}
      - uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Node-modules cache
        uses: actions/cache@v2
        id: node-cache
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install deps
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Gulp-build
        run: yarn boot
      - name: Building Gatsby
        run: yarn build:gatsby

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: $NAV_DS_TOKEN
          BRANCH: gh-pages
          FOLDER: website/public
        env:
          NAV_DS_TOKEN: ${{secrets.GIT_REPO}}
