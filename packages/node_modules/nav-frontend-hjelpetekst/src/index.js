import PT from 'prop-types';
import React, { Component } from 'react';
import classNames from 'classnames';
import { Infotekst } from 'nav-frontend-typografi';
import Lukknapp from 'nav-frontend-lukknapp';
import 'nav-frontend-hjelpetekst-style'; // eslint-disable-line import/extensions

const cls = (type, className) => classNames('hjelpetekst', className, {
    'hjelpetekst--under': type === 'under',
    'hjelpetekst--over': type === 'over',
    'hjelpetekst--hoyre': type === 'hoyre',
    'hjelpetekst--venstre': type === 'venstre'
});

class HjelpetekstBase extends Component {
    constructor(props) {
        super(props);
        this.toggleSynlighet = this.toggleSynlighet.bind(this);
        this.state = {
            erSynlig: false
        };
    }

    toggleSynlighet() {
        event.preventDefault();
        event.stopPropagation();
        this.setState({
            erSynlig: !this.state.erSynlig

        }, () => (this.state.erSynlig ? this.lukkeKnapp.focus() : this.apneKnapp.focus()));
    }

    renderContent() {
        return (
            <div
                tabIndex="-1"
                ref={(div) => { this.lukkeKnapp = div; }}
                className={cls(this.props.type, this.props.className)}
            >
                <Infotekst>
                    {this.props.children}
                </Infotekst>
                <Lukknapp
                    altTekst="Lukk hjelpetekst"
                    bla
                    overstHjorne
                    onClick={this.toggleSynlighet}
                />
            </div>
        );
    }
    render() {
        const Hjelpetekst = this.state.erSynlig ? this.renderContent() : null;
        return (
            <div className="hjelpetekst__container">
                <button
                    ref={(button) => { this.apneKnapp = button; }}
                    className="hjelpetekst__apneknapp"
                    onClick={this.toggleSynlighet}
                    title={this.props.tittel}
                    aria-pressed={this.state.erSynlig}
                >
                    <span aria-hidden="true" aria-label="apne hjelpetekst">?</span>
                </button>
                {Hjelpetekst}
            </div>
        );
    }
}

HjelpetekstBase.propTypes = {
    children: PT.node.isRequired,
    type: PT.oneOf(['over', 'under', 'hoyre', 'venstre']).isRequired,
    tittel: PT.string,
    className: PT.string
};

HjelpetekstBase.defaultProps = {
    tittel: 'Hjelptekst',
    className: undefined
};

export default HjelpetekstBase;

export const HjelpetekstOver = (props) => <HjelpetekstBase type="over" {...props} />;
export const HjelpetekstUnder = (props) => <HjelpetekstBase type="under" {...props} />;
export const HjelpetekstHoyre = (props) => <HjelpetekstBase type="hoyre" {...props} />;
export const HjelpetekstVenstre = (props) => <HjelpetekstBase type="venstre" {...props} />;
