.articleGrid {
  animation: articleGridFadeUp 600ms forwards;
}

.articleGridLazy {
  animation: articleGridFadeUpLazy 600ms forwards;
  transition: none;
}

@keyframes articleGridFadeUp {
  0% {
    opacity: 0;
    transform: translate3d(0, 1rem, 0);
  }
}

@keyframes articleGridFadeUpLazy {
  0% {
    opacity: 0;
    transform: translateY(2rem);
  }
}

.initialGrid {
  display: grid;
}

@media (max-width: 767px) {
  .initialGrid {
    gap: var(--a-spacing-4);
    grid-template-columns: 24;
  }

  .initialGrid > :is(:nth-child(2n + 1)) {
    grid-column: 1 / span 23;
  }

  .initialGrid > :is(:nth-child(2n + 2)) {
    grid-column: 2 / span 23;
  }
}

@media (min-width: 768px) and (max-width: 1279px) {
  .initialGrid {
    gap: var(--a-spacing-4);
    grid-template-columns: repeat(2, 1fr);
  }

  .initialGrid > :is(:nth-child(5n + 1)) {
    grid-column: span 2 / span 2;
  }
}

@media (min-width: 1280px) {
  .initialGrid {
    gap: var(--a-spacing-6);
    grid-template-columns: repeat(3, 1fr);
  }

  .initialGrid > :is(:nth-child(6n + 1), :nth-child(6n + 5)) {
    grid-row: span 2 / span 2;
  }

  .initialGrid > :is(:nth-child(6n + 2), :nth-child(6n + 3), :nth-child(6n + 4), :nth-child(6n + 6), ) {
    grid-column: span 2 / span 2;
  }
}
