import * as PT from 'prop-types';
import * as React from 'react';
import * as classNames from 'classnames';
import 'nav-frontend-paneler-style'; // eslint-disable-line import/extensions

export const cls = (className) => classNames('panel', className);

export interface PanelBaseProps {
    children: React.ReactNode | React.ReactChild | React.ReactChildren;
    className?: string;
}

class PanelBase extends React.Component<PanelBaseProps> {
    render() {
        const {children, className, ...props} = this.props;
        return (
            <div className={cls(className)} {...props}>{children}</div>
        );
    }
}

(PanelBase as React.ComponentClass).propTypes = {
    className: PT.string,
    children: PT.node.isRequired
};
(PanelBase as React.ComponentClass).defaultProps = {
    className: undefined
};

export default PanelBase;

export const Panel = (props) => <PanelBase children={props.children} {...props}/>;
