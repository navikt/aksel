name: Deploy aksel.nav.no
on:
  push:
    branches:
      - main
    paths:
      - "aksel.nav.no/**"

env:
  IMAGE: ghcr.io/navikt/aksel

jobs:
  sync_data_with_sanity:
    name: Update component data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup project
        uses: ./.github/actions/setup
        with:
          npm_auth_token: ${{ secrets.READER_TOKEN }}

      - name: Run ts-docgen
        run: yarn docgen

      - name: Update sanity sync
        env:
          SANITY_WRITE: ${{ secrets.SANITY_WRITE }}
        run: yarn workspace aksel.nav.no sanity:update

  build_and_deploy:
    name: Build and deploy to prod-gcp
    runs-on: ubuntu-latest
    permissions:
      packages: "write"
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup and build Next.js application
        uses: ./.github/actions/build-website
        with:
          use_cdn_assets: true
          production: true
          npm_auth_token: ${{ secrets.READER_TOKEN }}
          nais_id_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          nais_project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          sanity_read_token: ${{ secrets.SANITY_READ }}
          sanity_read_no_drafts_token: ${{ secrets.SANITY_READ_NO_DRAFTS }}

      - name: Get complete tag
        run: echo "TAG=PROD-$( date +%s )" >> $GITHUB_ENV

      - uses: nais/docker-build-push@v0
        id: docker-push
        with:
          team: designsystem
          push_image: true
          dockerfile: aksel.nav.no/Dockerfile
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Deploy to prod-gcp
        uses: nais/deploy/actions/deploy@master
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          RESOURCE: aksel.nav.no/nais-prod.yaml
          CLUSTER: prod-gcp
          IMAGE: ${{ steps.docker-push.outputs.image }}
